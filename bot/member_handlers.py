# member_handlers.py - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
from telegram import Update
from telegram.ext import CallbackContext
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

async def my_chat_member_handler(update: Update, context: CallbackContext, db):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ"""
    chat_member_update = update.my_chat_member

    if not chat_member_update:
        return

    chat = chat_member_update.chat
    new_member = chat_member_update.new_chat_member
    old_member = chat_member_update.old_chat_member
    user_who_changed = chat_member_update.from_user

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≥—Ä—É–ø–ø–∞ –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞
    if chat.type not in ["group", "supergroup"]:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Å–∞—é—Ç—Å—è –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
    if new_member.user.id != context.bot.id:
        return

    # –ë–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É
    if (old_member.status in ["left", "kicked"] and
        new_member.status in ["member", "administrator"]):

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥—Ä—É–ø–ø—É —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏–ª –±–æ—Ç–∞, –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        group_id = chat.id
        group_title = chat.title or "Unknown Group"
        admin_id = user_who_changed.id

        logger.info(f"Bot added to group {group_id} by user {admin_id}")

        # –î–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        if not db.check_if_group_exists(group_id):
            db.add_new_group(group_id, group_title, admin_id=admin_id)
        else:
            # –ï—Å–ª–∏ –≥—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            db.set_group_admin_id(group_id, admin_id)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            welcome_text = f"üëã –ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –¥–æ–±–∞–≤–∏–ª –≤ –≥—Ä—É–ø–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_who_changed.first_name}.\n\n"
            welcome_text += f"üîß –¢–æ–ª—å–∫–æ {user_who_changed.first_name} –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –º–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ.\n\n"
            welcome_text += "üìù –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç, —É–ø–æ–º—è–Ω–∏—Ç–µ –º–µ–Ω—è (@{}) –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –º–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ.".format(context.bot.username)

            await context.bot.send_message(
                chat_id=group_id,
                text=welcome_text
            )
        except Exception as e:
            logger.error(f"Error sending welcome message: {e}")

    # –ë–æ—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã
    elif (old_member.status in ["member", "administrator"] and
          new_member.status in ["left", "kicked"]):

        logger.info(f"Bot removed from group {chat.id}")

        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø—ã –∏–ª–∏ –ø–æ–º–µ—Ç–∫–∏ –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π
        # db.set_group_attribute(chat.id, "active", False)

async def chat_member_handler(update: Update, context: CallbackContext, db):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã"""
    chat_member_update = update.chat_member

    if not chat_member_update:
        return

    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã –ø–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –¥—Ä—É–≥–æ–º—É

    pass
